services:
  project-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholar-project-service
    env_file:
      - .env
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE}
      - SERVER_PORT=8083
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - PROJECT_DB_PORT=${PROJECT_DB_PORT}
      - PROJECT_DB_USER=${PROJECT_DB_USER}
      - PROJECT_DB_PASSWORD=${PROJECT_DB_PASSWORD}
      - RABBITMQ_HOST=user-rabbitmq
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - GEMINI_API_KEY=${GEMINI_API_KEY}

      # --- JVM tuning ---
      - JAVA_TOOL_OPTIONS=-XX:InitialRAMPercentage=25 -XX:MaxRAMPercentage=65 -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=200

      # --- Spring Boot resource usage ---
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE=2
      - SPRING_JPA_OPEN_IN_VIEW=false
      - SERVER_TOMCAT_MAX_THREADS=50
      - SERVER_TOMCAT_MAX_CONNECTIONS=200
      - SERVER_TOMCAT_ACCEPT_COUNT=50
      - SPRING_THREADS_VIRTUAL_ENABLED=true

    networks:
      - scholarai-network
    restart: unless-stopped

    # Resource caps
    cpus: 1.0
    mem_limit: 1250m
    mem_reservation: 768m
    pids_limit: 512
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

    # Keep your original curl healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  scholarai-network:
    external: true
    name: docker_scholarai-network



# Note: project-postgres is already running from meta/Scripts/docker.sh
# This service will connect to the existing project-db container

# Note: service-registry is already running from the main orchestration
# This service will connect to the existing service-registry container

# Volumes are managed by meta/Scripts/docker.sh